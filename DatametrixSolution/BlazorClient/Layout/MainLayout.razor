@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using YourBlazorApp.Services

@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@inject UserStateService UserStateService
@inject CustomAuthenticationStateProvider CustomAuthStateProvider

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a @onclick="Logout" class="btn btn-primary">Logout</a>
        </div>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

        <article class="content px-4">
            @if (isLoading)
            {
                <p>Loading...</p>
            }
            else if (!isAuthenticated)
            {
                
            }
            else
            {
                @Body
            }
        </article>
    </main>
</div>

@code {
    private bool isAuthenticated;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        UserStateService.SetUser(user);

        if (!user.Identity.IsAuthenticated)
        {
            isAuthenticated = false;
            Navigation.NavigateTo("/login", true);
        }
        else
        {
            isAuthenticated = true;
        }

        isLoading = false;
    }

    private async Task Logout()
    {
        if (AuthStateProvider is CustomAuthenticationStateProvider customAuthProvider)
        {
            customAuthProvider.NotifyUserLogout();
        }

        Navigation.NavigateTo("/login", true);
    }
}
